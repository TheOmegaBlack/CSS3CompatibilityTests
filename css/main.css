/*! HTML5 Boilerplate v6.0.1 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
* {
    box-sizing: border-box;
}

body {
    margin-left: 50px;
}

#trans3D-div1
{
    position: relative;
    height: 200px;
    width: 200px;
    margin: 50px;
    padding:10px;
    border: 1px solid black;
}

#trans3D-div2
{
    padding:50px;
    position: absolute;
    border: 1px solid black;
    background-color: red;
    transform: rotateY(45deg);
    transform-origin:50% 50% 100px;
    -webkit-transform: rotateY(70deg); /* Opera, Chrome, and Safari */
    -webkit-transform-origin:50% 50% 100px; /* Opera, Chrome, and Safari */
}

#trans3D-div3
{
    padding:40px;
    position: absolute;
    border: 1px solid black;
    background-color: yellow;
    transform: rotateY(80deg);
    transform-origin:40% 90% 10px;
    -webkit-transform: rotateY(80deg); /* Opera, Chrome, and Safari */
    -webkit-transform-origin:40% 90% 10px; /* Opera, Chrome, and Safari */
}

.flex-box {
    float: left;
    display: flex;
    width: 20em;
    border: 1px solid black;

}

.flex-box-1 {
    flex-direction: column;
}

.flex-box-2 {
    align-items: center;
    background: gray;
    margin-left: 50px;
}

.min-height {
    min-height: 20em;
}

.height {
    height: 20em;
}

.flex-article {
    flex: 1 0 auto;
    background-color: lightyellow;
}

.flex-header, .flex-footer {
    background-color: gray;
}

/* BECCA! */

.becca {
    color: rebeccapurple;
}

.becca-div {
    background: rebeccapurple;
    display: inline-block;
    height: 100px;
    padding: 40px 0;
    text-align: center;
    width: 200px;
}

.not-becca-div {
    background: purple;
    display: inline-block;
    height: 100px;
    padding: 40px 0;
    text-align: center;
    width: 200px;
}

/* GRID SECTION */

.grandfather-div {
    background: gray;
    display: grid;
    display: -ms-grid;
    max-width: 1200px;
    grid-template-columns:  50% 50%;
    grid-template-rows: 50% 50%;
    -ms-grid-columns: 50% 50%;
    -ms-grid-rows: 50% 50%;
}

/* In IE10/11 we cannot just use autoprefixer. Because the implementation reflects an old draft, the properties related to grid all have a different name.

grid-template-columns
  becomes
    -ms-grid-columns

grid-template-rows
  becomes
    -ms-grid-rows
*/

.father-div {
    margin-top: 20px;
    overflow: auto;
    height: 500px;
    width: 500px;
}

.father-div-1 {
    -ms-grid-column: 1;
    -ms-grid-row: 1;

    display: grid;
    justify-self: center;
    grid-template-columns: [first-column] 1fr [second-column] 1fr [third-column] 1fr [last-column];
    grid-template-rows: [first-row] 1fr [second-row] 1fr [third-row] 1fr [last-row];
}

.father-div-2 {
    -ms-grid-column: 2;
    -ms-grid-row: 1;

    display: -ms-grid;
    -ms-grid-column-align: center;
    -ms-grid-columns: 1fr 1fr 1fr;
    -ms-grid-rows: 1fr 1fr 1fr;
}
/* Grid in modern browsers automatically puts all the elements in separate cells, if it can. In IE 10/11 everything gets put in cell 1 if not specified directly */

/* IE11 supports fr as units. Very convenient. */

.son {
    background: white;
    border: solid 1px;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* No start and end, in IE10/11 we specify the start point and how many cells it will have to cover with span. */

.son-1 {
    background: orange;
    grid-column-start: first-column;
    grid-column-end: third-column;
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    -ms-grid-row: 1;
}

.son-2 {
    background: red;
    grid-column-start: second-column;
    grid-row-start: second-row;
    -ms-grid-column: 2;
    -ms-grid-row: 2;
}

.son-3 {
    background: blue;
    grid-row: first-row / third-row;
    grid-column-start: third-column;
    -ms-grid-column: 3;
    -ms-grid-row: 1;
    -ms-grid-row-span: 2;
}

.son-4 {
    background: yellow;
    grid-row-start: second-row;
    grid-row-end: last-row;
    -ms-grid-column: 1;
    -ms-grid-row: 2;
    -ms-grid-row-span: 2;
}

.son-5 {
    background: purple;
    -ms-grid-column: 2;
    -ms-grid-row: 3;
}

.son-6 {
    background: pink;
    -ms-grid-column: 3;
    -ms-grid-row: 3;
}

.css-holder {
    background: white;
    border-radius: 10px;
    margin: 30px 50px;
    padding: 10px;
}

.css-holder-1 {
    -ms-grid-column: 1;
    -ms-grid-row: 2;
}

.css-holder-2 {
    -ms-grid-column: 2;
    -ms-grid-row: 2;
}

.css-holder ul {
    list-style-type: none;
}

.one-more-thing {
    background: gray;
    padding: 20px 50px;
    width: 1200px;
}

.one-more-div {
    background: white;
    border-radius: 10px;
    padding: 10px;
}

/* Scrollbar section */

.scrollbar-div {
    display: inline-block;
    height: 300px;
    background: whitesmoke;
    overflow: scroll;
    width: 400px;
    max-width: 600px;
    margin: 30px 0;
    padding: 3em;
    font: 100%/1.4 serif;
    border: 1px solid rgba(0, 0, 0, 0.25);
    white-space: nowrap;
}

.scrollbar-inputs {
    display: inline-block;
    margin: 30px 0 0 10px;
    vertical-align: top;
}

#scroll-div::-webkit-scrollbar {
    width: 1em;
}
#scroll-div::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
}
#scroll-div::-webkit-scrollbar-thumb {
    background-color: green;
    border-radius: 10px;
    outline: 1px solid slategrey;
}
#scroll-div::-webkit-scrollbar-corner {
    background-color: purple;
    outline: 1px solid slategrey;
 }

/* image-pixelated section */

.flex-for-pics {
    display: flex;
    height: 300px;
    width: 900px;
}

.flex-for-pics div {
    height: 100%;
    width: 100%;
}

.dynamic-image {
    margin-top: 17px;
    transform-origin: left top;
    transition: all 1s;
}

.dynamic-image:hover {
    margin-top: 0;
    transform: scale(2, 2);
    transform-origin: left top;
}

.static-image {
    height: 300px;
    width: 300px;
}

.pixelated {
    image-rendering: pixelated;
    -ms-interpolation-mode: nearest-neighbor;
}

.background-css {
    background-image: url("../img/chart.png");
    background-size: cover;
}

.flex-for-words {
    display: flex;
    width: 900px;
}

.flex-for-words div {
    text-align: center;
    width: 100%;
}

.tablab1 tr th {
    height: 200px;
    width: 300px;
}

.tablab2 thead tr th{
    height: 100px;
    width: 300px;
}

.tablab2 tbody tr {
    height: 200px;
}

.sticky-header {
    background: #eee;
    position: sticky;
    position: -webkit-sticky;
    top: 0px;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    -webkit-clip-path: inset(50%);
    clip-path: inset(50%);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap; /* 1 */
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    -webkit-clip-path: none;
    clip-path: none;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
    white-space: inherit;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print,
       (-webkit-min-device-pixel-ratio: 1.25),
       (min-resolution: 1.25dppx),
       (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
    *,
    *:before,
    *:after {
        background: transparent !important;
        color: #000 !important; /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: " (" attr(href) ")";
    }

    abbr[title]:after {
        content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

    a[href^="#"]:after,
    a[href^="javascript:"]:after {
        content: "";
    }

    pre {
        white-space: pre-wrap !important;
    }
    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */

    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
